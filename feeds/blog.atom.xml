<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Шаманский блог - Блог</title><link href="/" rel="alternate"></link><link href="/feeds/blog.atom.xml" rel="self"></link><id>/</id><updated>2017-09-12T18:00:00+03:00</updated><entry><title>Загрузи мою ферму полностью. Автозагрузка майнинг фермы после падения электропитания</title><link href="/zagruzi-moiu-fermu-polnostiu-avtozagruzka-maining-fermy-posle-padeniia-elektropitaniia.html" rel="alternate"></link><published>2017-09-12T18:00:00+03:00</published><updated>2017-09-12T18:00:00+03:00</updated><author><name>Николай Шаманович</name></author><id>tag:None,2017-09-12:/zagruzi-moiu-fermu-polnostiu-avtozagruzka-maining-fermy-posle-padeniia-elektropitaniia.html</id><summary type="html">&lt;p&gt;Для того чтобы добавить майнер в автозарузку нужно положить ярлычек батника в папку Автозагрузка. Все, дело сделано, всем спасибо, можно расходится.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_0" src="/images/farmload_0.png" /&gt;&lt;/p&gt;
&lt;p&gt;А теперь серьезно. Способ описанный выше не подходит в случае если у нас например стоит пароль на вход (как в моем случае).
Или что будет если майнер затупит по …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Для того чтобы добавить майнер в автозарузку нужно положить ярлычек батника в папку Автозагрузка. Все, дело сделано, всем спасибо, можно расходится.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_0" src="/images/farmload_0.png" /&gt;&lt;/p&gt;
&lt;p&gt;А теперь серьезно. Способ описанный выше не подходит в случае если у нас например стоит пароль на вход (как в моем случае).
Или что будет если майнер затупит по какой либо причине. Можно конечно городить огород из скриптов и оболочек,
но зачем если есть такая замечательная вешь как Планировщик Заданий. Он сделает все за нас в лучшем виде.
Что ж, приступим. Показывать я буду на примере майнера EWBF, но думаю, что должно работать с любым майнером.&lt;/p&gt;
&lt;p&gt;Для начала нужно настроить биос на автоматическое вклюение после подачи питания, если вы вдруг еще не сделали это.
Такая функция должна быть почти у всех материнсикх плат. Поищите в BIOS и активируйте нужный параметр.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_1" src="/images/farmload_1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Теперь идем в планировщик и создаем там новое задание:&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_2" src="/images/farmload_2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Выбираем опцию &amp;quot;выполнять вне зависимости от регистрации&amp;quot; в случае если нам нужно грузиться до логина в систему. Галка с наивысшем приоритетам по сути тут лишняя.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_4" src="/images/farmload_4.png" /&gt;&lt;/p&gt;
&lt;p&gt;Тут выбираем либо при включении, то есть до логина, либо при входе, то есть после логина.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_5" src="/images/farmload_5.png" /&gt;&lt;/p&gt;
&lt;p&gt;В поле программы полный путь до майнера, а в параметры собственно все параметры как в батнике. Не забудьте о параметре --api если такой у майнера есть.
Очень полезная штука, так как если запускать майнер для незарегистрированных пользователей окна терминала вы не увидите.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_6" src="/images/farmload_6.png" /&gt;&lt;/p&gt;
&lt;p&gt;Тут устанавливаем параметры для перезагрузки, если нужно конечно.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_7" src="/images/farmload_7.png" /&gt;&lt;/p&gt;
&lt;p&gt;После нажатия OK, если был выбран вариант загрузки для незарегистрированных пользователей винда попросит ввести пароль для пользователя.&lt;/p&gt;
&lt;p&gt;&lt;img alt="img_8" src="/images/farmload_8.png" /&gt;&lt;/p&gt;
&lt;p&gt;Аналогичным образом можно запускать например MSI Afterburner и прочие утилиты. Для Afterburner-а там уже скорее всего создано задание,
но его я трогать не советую - приложение скорее всего само будет каждый раз исправлять ваши изменения.
У меня есть 2 задания - одно оригинальное, срабатывает при входе, другое самодельное - для загрузки без логина.&lt;/p&gt;
&lt;p&gt;Если пользовались опцией --api, то может потребоваться заглянуть в настройки брандмауэра.&lt;/p&gt;
</content><category term="mining"></category><category term="windows"></category><category term="zcache"></category><category term="autostart"></category><category term="планировщик"></category></entry><entry><title>Сервер в роли рабочей станции. Проверяем закон Мура</title><link href="/server-v-roli-rabochei-stantsii-proveriaem-zakon-mura.html" rel="alternate"></link><published>2016-12-11T20:00:00+03:00</published><updated>2016-12-11T20:00:00+03:00</updated><author><name>Николай Шаманович</name></author><id>tag:None,2016-12-11:/server-v-roli-rabochei-stantsii-proveriaem-zakon-mura.html</id><summary type="html">&lt;p&gt;Со скоростью достаочно расторопного ленивца собрал наконец свой убер-ПК на основе серверной материнки.
В этой статье будет небольшой обзор и тест, а также я попробую проверить закон Мура,
а именно, то что производительность МП удваивается каждые 18 мес.
Сравнивать я буду свой новый сервер и ретросервер, обзор и тестирование которого …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Со скоростью достаочно расторопного ленивца собрал наконец свой убер-ПК на основе серверной материнки.
В этой статье будет небольшой обзор и тест, а также я попробую проверить закон Мура,
а именно, то что производительность МП удваивается каждые 18 мес.
Сравнивать я буду свой новый сервер и ретросервер, обзор и тестирование которого я делал недавно.
Почитать про ретросервер можно &lt;a class="reference external" href="/na-chto-sposoben-server-za-500-rublei-obzor-i-testirovanie.html"&gt;тут&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_5" src="/images/server_5.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Я считаю что эти сервера идеально подходят для того чтобы проверить закон Мура. Оба сервера являются средемощными
для своего времени, являются так сказать лучшими по показателю цена/качество. Также у обоих машин
явный перебор по объему памяти для моих тестов.&lt;/p&gt;
&lt;p&gt;Собственно характеристики нового сервера такие:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="40%" /&gt;
&lt;col width="60%" /&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;Материская плата&lt;/td&gt;
&lt;td&gt;SuperMicro X8DTL-i&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Процессор&lt;/td&gt;
&lt;td&gt;2 x Intel Xeon X5650&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Память&lt;/td&gt;
&lt;td&gt;4 x 8Gb Hynix DDR3-1333Mgz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Жесткйи диск&lt;/td&gt;
&lt;td&gt;WD SATA-III 1Tb WD10EZEX Blue&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Корпус остался от ретросервера, также поставил звукавуху SB Live! и видео Radeon HD 4650 от ASUS.&lt;/p&gt;
&lt;p&gt;Плата пришла ко мне с небольшими дефектам, была немного погнута ножка на сокете и были всякие разводы,
остатки термопасты и прочие следы эксплуатации, хотя продавец на Ибее утверждал, что плата ни разу не
запускалась и все такое.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_6" src="/images/server_6.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;В любом случае досталась мне опять таки очень дешево и я особо не стал разбираться. Благо плата
пришла в хорошей упаковке и в работе никаких нареканий не вызывает. Но продавцу все-равно дизлайк.&lt;/p&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;Тесты&lt;/h2&gt;
&lt;p&gt;Будем считать что ретросервер на intel se7520bd2(dp2800) был выпушен в 2005 году
(точной информации по выходу платы не нашел, взял дату самого старого драйвера с сайта интел),
а новый сервер на SuperMicro X8DTL-i(x5650) в 2010 (тоже дата с сайта интел, только взята для процессора X5650)&lt;/p&gt;
&lt;p&gt;Итого примерная разница в возрасте 5 лет или 60 месяцев, и согласно закону Мура производительность должна вырасти
в 2^3.33 = 10 раз. Так как я не знаю точного возраста железа, некоторые отклонения вполне допустимы.&lt;/p&gt;
&lt;p&gt;Тестирование я проводил по такой же схеме как и в статье про ретросервер.&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Список тестов:&lt;/h3&gt;
&lt;ol class="arabic simple" start="0"&gt;
&lt;li&gt;Тест архиватора bzip2. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест архиватора pbzip2. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест архиватора zpaq. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест компиляции. Компиляция ядра Линукс на дефолтном конфиге.&lt;/li&gt;
&lt;li&gt;Тест LinPack (Intel® MKL Benchmarks).&lt;/li&gt;
&lt;li&gt;Тест sysbench память&lt;/li&gt;
&lt;li&gt;Тест sysbench процессор&lt;/li&gt;
&lt;li&gt;Тест диска hdparm -t /dev/sda&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="bzip2"&gt;
&lt;h3&gt;Тест архиватора bzip2. Архивация установочника дебиана.&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="18%" /&gt;
&lt;col width="38%" /&gt;
&lt;col width="44%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Сервер&lt;/th&gt;
&lt;th class="head"&gt;с Hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без Hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;dp2800&lt;/td&gt;
&lt;td&gt;192.14 сек.&lt;/td&gt;
&lt;td&gt;192.47 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;x5650&lt;/td&gt;
&lt;td&gt;122.33 сек.&lt;/td&gt;
&lt;td&gt;130.22 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Как и в случае с ретросервером Hypr-threading совершенно не влияет на тест в однопоточном bzib2.&lt;/p&gt;
&lt;p&gt;Если сравнивать результаты двух серверов, то получаем ускорение всего лишь в 1.5 раза. Собственно это можно объяснить тем, что частоты
у процессоров приблизительно одинаковые, а вот количество ядер отличается на порядок, следовательно тесты, в которых
задействован параллелизм будут более показательными.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pbzip2"&gt;
&lt;h3&gt;Тест архиватора pbzip2. Архивация установочника дебиана.&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="39%" /&gt;
&lt;col width="45%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Сервер&lt;/th&gt;
&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;dp2800&lt;/td&gt;
&lt;td&gt;85.57 сек.&lt;/td&gt;
&lt;td&gt;101.74 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;x5650&lt;/td&gt;
&lt;td&gt;8.97&lt;/td&gt;
&lt;td&gt;10.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Этот тест показывает то самое ускорение в 10 раз, что собственно не может не радовать. Hyper-threading тут в очередной раз показывает
свою полезность.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zpaq"&gt;
&lt;h3&gt;Тест архиватора zpaq. Архивация установочника дебиана.&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="39%" /&gt;
&lt;col width="45%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Сервер&lt;/th&gt;
&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;dp2800&lt;/td&gt;
&lt;td&gt;4024 сек.&lt;/td&gt;
&lt;td&gt;4083 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;x5650&lt;/td&gt;
&lt;td&gt;1566 сек.&lt;/td&gt;
&lt;td&gt;1561 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Снова последовательный тест, но в данном случае получаем ускорение в 2.5 раза, что лучше, чем в тесте bzip2, но все же до 10
сильно не дотягивает.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;Тест компиляции. Компиляция ядра Линукс на дефолтном конфиге.&lt;/h3&gt;
&lt;p&gt;&lt;img alt="bench_2" src="/images/bench_2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Лучший результат достигается на 24 потоках с включеным Hyper-threading - 77.54 сек. Если сравнивать с лучшим результатом ретросервера,
то получается ускорение в 14.8 раз.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="linpack-intel-mkl-benchmarks"&gt;
&lt;h3&gt;Тест LinPack (Intel® MKL Benchmarks).&lt;/h3&gt;
&lt;p&gt;Наверное это будет самый показательный тест. Опять только бинарный тест, но я вроде понял что этот тест просто не работает с ядрами
Hyper-threading.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="16%" /&gt;
&lt;col width="39%" /&gt;
&lt;col width="45%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Сервер&lt;/th&gt;
&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;dp2800&lt;/td&gt;
&lt;td&gt;4.972 Gflops&lt;/td&gt;
&lt;td&gt;5.216 Gflops&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;x5650&lt;/td&gt;
&lt;td&gt;122.89 Gflops&lt;/td&gt;
&lt;td&gt;123.05 Gflops&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Тут получается ускорение аж в 23.6 раза! Hyper-threading на результаты нового сервера не влияет.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sysbench"&gt;
&lt;h3&gt;Тест sysbench память&lt;/h3&gt;
&lt;p&gt;Тут проверять Hyper-threading нет смылсла.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;dp2800&lt;/th&gt;
&lt;th class="head"&gt;x5650&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;1095 Mb/сек.&lt;/td&gt;
&lt;td&gt;1832 Mb/сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Получаем ускорение в 1.7 раз.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Тест sysbench процессор&lt;/h3&gt;
&lt;p&gt;Тут я выбрал для сравнения только лучшие результаты.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="50%" /&gt;
&lt;col width="50%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;dp2800 с HT 4 потока&lt;/th&gt;
&lt;th class="head"&gt;x5650 с HT 24 потока&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;10.4 сек&lt;/td&gt;
&lt;td&gt;0.67&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Ускорение в 15.5 раз.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="hdparm-t-dev-sda"&gt;
&lt;h3&gt;Тест диска hdparm -t /dev/sda&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;dp2800&lt;/th&gt;
&lt;th class="head"&gt;x5650&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;75.11 Mb/сек.&lt;/td&gt;
&lt;td&gt;175.6 Mb/сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Ускорение в 2.3 раза.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;Заключение&lt;/h2&gt;
&lt;p&gt;Естественно, новый сервер оказался гораздо мощнее, но только эта мощность распределилась несколько неравномерно.
Если рассматривать тесты, которые не используют многопоточность, то тут все весьма грустно и мы имеем не более чем трехкратную прибавку
производительности, если же рассматривать многопоточные тесты, то получается что можно достичь и 25-ти кратного ускорения
Тесты, которые не зависят напрямую от процессора также не показали ожидаемого 10-ти кратного прироста
производительности.&lt;/p&gt;
&lt;p&gt;Из всего этого можно сделать вывод, что закон Мура может выполняться только, при рассмотрении системы в целом. Результаты
подобных тестов могут сильно варьироваться в зависимости от методики тестирования или фаз луны, поэтому, когда в
следующий раз увидите заявления о том что закон Мура не выполняется или наоборот перевыполняется обратите внимание на то
что и как мерили. А вообще довольно трудно судить о верности закона Мура на основе всего лишь двух тестов разных машин.
Вообще все эти тесты я производил для того, чтобы убедится в том, что новый сервак тащит да и просто just for fun, а закон Мура
был выбран в качестве ориентира.&lt;/p&gt;
&lt;/div&gt;
</content><category term="hardware"></category><category term="retro"></category><category term="benchmark"></category><category term="xeon"></category><category term="Intel"></category><category term="SuperMicro"></category><category term="Linux"></category><category term="железо"></category><category term="сервер"></category></entry><entry><title>Прикручиваем Яндеск.Метрику к pelican правильно.</title><link href="/prikruchivaem-iandeskmetriku-k-pelican-pravilno.html" rel="alternate"></link><published>2016-12-05T23:00:00+03:00</published><updated>2016-12-05T23:00:00+03:00</updated><author><name>Николай Шаманович</name></author><id>tag:None,2016-12-05:/prikruchivaem-iandeskmetriku-k-pelican-pravilno.html</id><summary type="html">&lt;p&gt;Попытался найти в интернете как приделать Метрику к своему блогу,
но находил только решения типа — приколоти на гвозди вот тут,
и так сойдет. Короче решил разобраться и сделать все как надо.&lt;/p&gt;
&lt;p&gt;Для начала генерируем html код счетчика согласно официальной инструкции:
&lt;a class="reference external" href="https://yandex.ru/support/metrika/quick-start.xml"&gt;https://yandex.ru/support/metrika/quick-start.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Открываем publishconf.py …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Попытался найти в интернете как приделать Метрику к своему блогу,
но находил только решения типа — приколоти на гвозди вот тут,
и так сойдет. Короче решил разобраться и сделать все как надо.&lt;/p&gt;
&lt;p&gt;Для начала генерируем html код счетчика согласно официальной инструкции:
&lt;a class="reference external" href="https://yandex.ru/support/metrika/quick-start.xml"&gt;https://yandex.ru/support/metrika/quick-start.xml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Открываем publishconf.py.
В нем создаем новый параметр, в котором будет храниться номер вашего счетчика&lt;/p&gt;
&lt;p&gt;Например так:&lt;/p&gt;
&lt;p&gt;YANDEX_METRIKA = &amp;quot;41353264&amp;quot;&lt;/p&gt;
&lt;p&gt;Затем нужно доработать тему.&lt;/p&gt;
&lt;p&gt;Моя тема хранится в паке блога в themes/shmblog/ и это по сути копия
стандартной темы.&lt;/p&gt;
&lt;p&gt;Добавляем новый шаблон &lt;em&gt;themes/shmblog/templates/metrika.html&lt;/em&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{% if YANDEX_METRIKA %}
&amp;lt;!-- Yandex.Metrika counter --&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    (function (d, w, c) {
        (w[c] = w[c] || []).push(function() {
            try {
                w.yaCounter{{YANDEX_METRIKA}} = new Ya.Metrika({
                    id: {{YANDEX_METRIKA}},
                    clickmap:true,
                    trackLinks:true,
                    accurateTrackBounce:true
                });
            } catch(e) { }
        });

        var n = d.getElementsByTagName(&amp;quot;script&amp;quot;)[0],
            s = d.createElement(&amp;quot;script&amp;quot;),
            f = function () { n.parentNode.insertBefore(s, n); };
        s.type = &amp;quot;text/javascript&amp;quot;;
        s.async = true;
        s.src = &amp;quot;https://mc.yandex.ru/metrika/watch.js&amp;quot;;

        if (w.opera == &amp;quot;[object Opera]&amp;quot;) {
            d.addEventListener(&amp;quot;DOMContentLoaded&amp;quot;, f, false);
        } else { f(); }
    })(document, window, &amp;quot;yandex_metrika_callbacks&amp;quot;);
&amp;lt;/script&amp;gt;
&amp;lt;noscript&amp;gt;&amp;lt;div&amp;gt;&amp;lt;img src=&amp;quot;https://mc.yandex.ru/watch/{{YANDEX_METRIKA}}&amp;quot; style=&amp;quot;position:absolute; left:-9999px;&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/noscript&amp;gt;
&amp;lt;!-- /Yandex.Metrika counter --&amp;gt;
{% endif %}
&lt;/pre&gt;
&lt;p&gt;Это тот самый код, который нам генерирует Яндекс,
только код счетчика заменен на {{YANDEX_METRIKA}}.&lt;/p&gt;
&lt;p&gt;Далее правим основной шаблон. &lt;em&gt;themes/shmblog/templates/base.html&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Дописываем куда-нибудь в конец строку:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
{% include 'metrika.html' %}
&lt;/pre&gt;
&lt;p&gt;Ну теперь все, проверяем. Запускаем сервер и генерируем сайт с продакшн
настройками.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
make publish &amp;amp;&amp;amp; make serve
&lt;/pre&gt;
&lt;p&gt;Естественно локально сайт будет выглядеть криво,
главное найти найти в конце странице наш код метрики и сравнить его с тем,
что сгенерировал Яндекс.
Если все верно, то можно публиковать.&lt;/p&gt;
&lt;p&gt;P.S.
Статистика на сайте обновляется примерно раз в полчаса,
адблоки могут блокировать работу метрики.&lt;/p&gt;
</content><category term="pelican"></category><category term="howto"></category><category term="yandex.metrika"></category><category term="web"></category><category term="Яндекс.Метрика"></category></entry><entry><title>На что способен сервер за 500 рублей. Обзор и тестирование</title><link href="/na-chto-sposoben-server-za-500-rublei-obzor-i-testirovanie.html" rel="alternate"></link><published>2016-11-29T12:00:00+03:00</published><updated>2016-11-29T12:00:00+03:00</updated><author><name>Николай Шаманович</name></author><id>tag:None,2016-11-29:/na-chto-sposoben-server-za-500-rublei-obzor-i-testirovanie.html</id><summary type="html">&lt;p&gt;Попался мне тут в руки один ретросервер. Приобрел я его на всеми любимом авито всего за 500 рублей.
По сути мне нужен был только корпус, все что было внутри его продавец отдал мне в качестве подарка.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_0" src="/images/server_0.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Собственно за 500 рублей я получил только корпус с бекплейтом, материнку, 2 процессора, привод …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Попался мне тут в руки один ретросервер. Приобрел я его на всеми любимом авито всего за 500 рублей.
По сути мне нужен был только корпус, все что было внутри его продавец отдал мне в качестве подарка.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_0" src="/images/server_0.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Собственно за 500 рублей я получил только корпус с бекплейтом, материнку, 2 процессора, привод CD-ROM, флоппик,
и 4 SCSI диска. Весела эта штука порядка 25 килограмм и пер я ее долго и
упорно почти через весь город, но это не так важно...
Притащил эту штуку домой, разобрал, почистил, снова собрал, и где-то в процессе всех этих действий у меня
возникло дикое желание запустить данный аппарат и посмотреть на что он способен.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_3" src="/images/server_3.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Недостающие компоненты были куплены на не менее любимом всеми ebay, тоже достаточно дешево,
и вот почти через месяц приехали ко мне. Можно собирать.&lt;/p&gt;
&lt;p&gt;Конфигурация получилась такая:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;материнская плата intel se7520bd2;&lt;/li&gt;
&lt;li&gt;пара процессоров intel xeon dp2800/2mb/800;&lt;/li&gt;
&lt;li&gt;4 планки памяти неизвестного производителя DDR-266 по 2Гб, всего получилось 8Гб;&lt;/li&gt;
&lt;li&gt;4 диска Seageate Cheetah 10K.7 ST373207LC по 80 Gb каждый;&lt;/li&gt;
&lt;li&gt;блок питания Rosewill Hiwe-1000, могучий киловатник.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;С блоком питания тут явный перебор, но он предназначается совсем другому серверу.
Также для проверки воткнул видекарту Radeon 9250 и звуковуху Sound blaster live! 5.1.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_1" src="/images/server_1.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;После запуска сервер начал довольно сильно шуметь вентиляторами и дисками, а рейд-контроллер
начал пищать на все лады. Картинка на мониторе появилась только после пары минут.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_2" src="/images/server_2.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Нерабочими оказались только пара дисков, я их вынул, а из оставшихся двух собрал RAID 1.
Все остальное железо вроде бы функционирует исправно.&lt;/p&gt;
&lt;p&gt;Быстренько пробежимся по возможностям этого сервера - он умеет в PXE, Hyper-threading, EFI32, также
у него в биое присутствует дополнительная вкладка SERVER, а также там можно посмотреть
какие слоты памяти активны.&lt;/p&gt;
&lt;p&gt;&lt;img alt="server_4" src="/images/server_4.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;Попытка установить Windows XP успехом не увенчалась, при попытке установки драйвера рейда
я стабильно вываливался в синий экран. Пользуясь случаем передаю привет MS.&lt;/p&gt;
&lt;p&gt;Debian 8 установилась по PXE без вопросов, хотя ставилась довольно долго, порядка двух часов.&lt;/p&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;Тесты&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;Список тестов&lt;/h3&gt;
&lt;ol class="arabic simple" start="0"&gt;
&lt;li&gt;Тест архиватора bzip2. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест архиватора pbzip2. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест архиватора zpaq. Архивация установочника дебиана.&lt;/li&gt;
&lt;li&gt;Тест компиляции. Компиляция ядра Линукс на дефолтном конфиге.&lt;/li&gt;
&lt;li&gt;Тест LinPack (Intel® MKL Benchmarks).&lt;/li&gt;
&lt;li&gt;Тест sysbench память&lt;/li&gt;
&lt;li&gt;Тест sysbench процессор&lt;/li&gt;
&lt;li&gt;Тест диска hdparm -t /dev/sda&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;Методика тестирования&lt;/h3&gt;
&lt;p&gt;Тесты прогонял один за другим с включенным и выключенным Hyper-threading
таким образом можно протестировать не только сам сервер, а еще и то
полезен или вреден Hyper-threading. В тестах архивации был использован
установочный образ debian-8.1.0-amd64-i386-netinst весом 555 Мб.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="bzip2"&gt;
&lt;h3&gt;Тест архиватора bzip2. Архивация установочника дебиана.&lt;/h3&gt;
&lt;p&gt;Архивировал с параметром --fast.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с Hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без Hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;192.14 сек.&lt;/td&gt;
&lt;td&gt;192.47 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Собственно Hyper-threading не влияет на bzip2 никак.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pbzip2"&gt;
&lt;h3&gt;Тест архиватора pbzip2. Архивация установочника дебиана.&lt;/h3&gt;
&lt;p&gt;Паралельная версия bzip2. Тоже --fast.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;85.57 сек.&lt;/td&gt;
&lt;td&gt;101.74 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;В этом тесте Hyper-threading оказался весьма полезным.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zpaq"&gt;
&lt;h3&gt;Тест архиватора zpaq. Архивация установочника дебиана.&lt;/h3&gt;
&lt;p&gt;Великий и могучий сжиматель. Архивировал с дефолтными параметрами.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;4024 сек.&lt;/td&gt;
&lt;td&gt;4083 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Параллельного pzpaq в репозитории не обнаружил, но я думаю что будет то же самое что и с bzip2 pbzip2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;Тест компиляции. Компиляция ядра Линукс на дефолтном конфиге.&lt;/h3&gt;
&lt;p&gt;В этом тесте я также решил найти определить оптимальное количество потоков для компиляции.
В gentoo.wiki сказано что потоков должно быть на 1 больше, чем количество ядер процессоров.&lt;/p&gt;
&lt;p&gt;&lt;img alt="bench_0" src="/images/bench_0.png" /&gt;&lt;/p&gt;
&lt;p&gt;В моем случае лучшие результаты достигаются при колличестве потоко роному количеству ядер, т.е.
4 и 2 при включенном и выключенным Hyper-threading соответственно.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="47%" /&gt;
&lt;col width="53%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading 4 потока&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading 2 потока&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;1158 сек.&lt;/td&gt;
&lt;td&gt;1323 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Тут hyper-threading снова оказывается весьма полезным.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="linpack-intel-mkl-benchmarks"&gt;
&lt;h3&gt;Тест LinPack (Intel® MKL Benchmarks).&lt;/h3&gt;
&lt;p&gt;Тут я прогонял только бинарный тест. Собрать из сорцов у меня не получилось, прошу меня за это простить.
Бинраный тест запускается на двух потоках.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;4.972 Gflops&lt;/td&gt;
&lt;td&gt;5.216 Gflops&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Этот тест показывает, что все таки Hyper-threading не всегда полезный.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sysbench"&gt;
&lt;h3&gt;Тест sysbench память&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;1095 Mb/сек.&lt;/td&gt;
&lt;td&gt;1100 Mb/сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;На результаты этого теста Hyper-threading не влияет, как и количество потоков.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;Тест sysbench процессор&lt;/h3&gt;
&lt;p&gt;&lt;img alt="bench_1" src="/images/bench_0.png" /&gt;&lt;/p&gt;
&lt;p&gt;Лучшие результаты также как и в тесте с компиляцией получаются на 2 и 4 потоках.&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="47%" /&gt;
&lt;col width="53%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading 4 потока&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading 2 потока&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;10.4 сек.&lt;/td&gt;
&lt;td&gt;12.6 сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="hdparm-t-dev-sda"&gt;
&lt;h3&gt;Тест диска hdparm -t /dev/sda&lt;/h3&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="46%" /&gt;
&lt;col width="54%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;с hyper-threading&lt;/th&gt;
&lt;th class="head"&gt;без hyper-threading&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;75.11 Mb/сек.&lt;/td&gt;
&lt;td&gt;73.8 Mb/сек.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;Заключение&lt;/h2&gt;
&lt;p&gt;Данный аппарат является очень интересной железкой и им в принципе можно пользоваться до сих пор,
но уж больно он шумный и иногда предательски фризит, все таки годы берут свое.
В любом случае этот сервер и результаты тестирования послужат хорошей отправной
точкой для обзора других моих железок. Я надеюсь, что данная статья была интересной или даже полезной.&lt;/p&gt;
&lt;/div&gt;
</content><category term="hardware"></category><category term="retro"></category><category term="benchmark"></category><category term="xeon"></category><category term="Intel"></category><category term="Linux"></category><category term="железо"></category><category term="ретро"></category><category term="сервер"></category></entry></feed>